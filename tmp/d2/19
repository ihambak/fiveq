19 Debugging  (일반버전)


멘딕스(Mendix)에서 **Debugging(디버깅)**은 애플리케이션 개발 과정에서 발생하는 오류나 문제를 찾아내고 수정하는 과정을 의미합니다. 디버깅을 통해 개발자는 앱의 흐름, 변수 값, 로직 실행 상태 등을 실시간으로 확인하여 문제의 원인을 정확히 파악하고 개선할 수 있습니다.
멘딕스 디버깅 소개 및 정의
디버깅이란?
프로그램이 의도한 대로 동작하지 않을 때, 그 원인을 추적하고 수정하는 과정입니다.
멘딕스에서 디버깅의 중요성
Mendix는 로우코드(low-code) 플랫폼으로 비즈니스 로직을 빠르게 구현할 수 있지만, 복잡한 프로세스나 데이터 흐름에서 오류가 발생할 수 있습니다. 이때 디버깅 기능은 개발자가 앱의 상태를 실시간으로 점검해 문제를 빠르게 해결하도록 돕습니다.
멘딕스 디버깅 방법
1. Debugger 활성화 및 사용
Mendix Studio Pro에서 디버깅 모드를 켜고 앱을 실행합니다.
메뉴에서 Run > Run with Debugger 또는 단축키 Ctrl+F5를 사용해 디버깅 모드로 실행할 수 있습니다.
디버깅 모드로 실행하면 스텝별 실행, 중단점(Breakpoint) 설정, 변수 값 확인 등이 가능합니다.
2. 중단점(Breakpoint) 설정
모델러 내에서 문제를 확인하고 싶은 액티비티나 마이크로플로우의 특정 지점에 중단점을 설정합니다.
중단점에 도달하면 애플리케이션 실행이 일시 정지되고, 변수 상태와 실행 스택을 확인할 수 있습니다.
3. 스텝 실행 (Step Execution)
Step Over: 현재 라인을 실행하고 다음 라인으로 이동 (함수 내부는 실행하지만 들어가지는 않음)
Step Into: 현재 라인을 실행하고 함수 내부로 들어감
Step Out: 현재 함수 실행을 마치고 호출한 위치로 빠져나감
4. 변수 및 데이터 확인
디버거 창에서 현재 변수 값, 객체 상태, 컬렉션 내 데이터 등을 실시간으로 확인할 수 있습니다.
이를 통해 데이터 흐름이 올바른지, 예상대로 값이 변하는지 점검할 수 있습니다.
5. 로그 및 트레이스 확인
Mendix에서는 앱 로그를 통해 오류 메시지, 경고, 정보 등을 확인할 수 있습니다.
로그 설정에서 디버그 레벨로 변경하면 더 상세한 실행 내역을 기록해 문제 분석에 도움을 줍니다.
6. 브라우저 개발자 도구 활용
프론트엔드 문제 확인 시 브라우저 개발자 도구(Chrome DevTools 등)를 활용하여 콘솔 오류, 네트워크 요청 상태, DOM 요소 상태를 점검합니다.
요약
기능	설명
Run with Debugger	디버깅 모드로 앱 실행
Breakpoint	코드 실행 일시 중지 지점 설정
Step Over/Into/Out	코드 라인별 실행 흐름 조절
Variable Inspection	변수와 데이터 상태 실시간 확인
Log Analysis	애플리케이션 로그로 문제 진단
Browser Dev Tools	프론트엔드 문제 점검용 추가 도구

