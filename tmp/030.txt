// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package myfirstmodule.actions;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.core.Core;
import com.mendix.webui.CustomJavaAction;

public class ExcelDownload extends CustomJavaAction<IMendixObject>
{
	private final java.lang.String searchName;
	/** @deprecated use ExcelFileDoc.getMendixObject() instead. */
	@java.lang.Deprecated(forRemoval = true)
	private final IMendixObject __ExcelFileDoc;
	private final myfirstmodule.proxies.ExcelFileDoc ExcelFileDoc;

	public ExcelDownload(
		IContext context,
		java.lang.String _searchName,
		IMendixObject _excelFileDoc
	)
	{
		super(context);
		this.searchName = _searchName;
		this.__ExcelFileDoc = _excelFileDoc;
		this.ExcelFileDoc = _excelFileDoc == null ? null : myfirstmodule.proxies.ExcelFileDoc.initialize(getContext(), _excelFileDoc);
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		Workbook workbook = new XSSFWorkbook();
		Sheet sheet = workbook.createSheet("시트");

		// 제목 스타일 생성
		CellStyle titleStyle = workbook.createCellStyle();
//		titleStyle.setAlignment(HorizontalAlignment.CENTER);
		titleStyle.setVerticalAlignment(VerticalAlignment.CENTER);
		// 제목 폰트 설정 (크게)
		Font titleFont = workbook.createFont();
		titleFont.setBold(true);
		titleFont.setFontHeightInPoints((short) 12); // 16pt 크기
		titleStyle.setFont(titleFont);

		// 제목 행 생성 (0번 행)
		Row titleRow = sheet.createRow(0);
		titleRow.setHeight((short) 600); // 30 포인트 높이
		Cell titleCell = titleRow.createCell(0);
		titleCell.setCellValue("엑셀 테스트 다운로드");
		titleCell.setCellStyle(titleStyle);

		// 셀 병합 (0행 0열부터 0행 3열까지)
//		sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 3));

		// 스타일 생성
		CellStyle headerStyle = workbook.createCellStyle();
		Font headerFont = workbook.createFont();
		headerFont.setBold(true);
		headerFont.setColor(IndexedColors.WHITE.getIndex());
		headerStyle.setFont(headerFont);
		headerStyle.setFillForegroundColor(IndexedColors.GREY_50_PERCENT.getIndex());
		headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
		headerStyle.setBorderTop(BorderStyle.THIN);
		headerStyle.setBorderBottom(BorderStyle.THIN);
		headerStyle.setBorderLeft(BorderStyle.THIN);
		headerStyle.setBorderRight(BorderStyle.THIN);
		headerStyle.setAlignment(HorizontalAlignment.CENTER);
		headerStyle.setVerticalAlignment(VerticalAlignment.CENTER);

		// 데이터 셀 스타일 생성
		CellStyle dataStyle = workbook.createCellStyle();
		dataStyle.setBorderTop(BorderStyle.THIN);
		dataStyle.setBorderBottom(BorderStyle.THIN);
		dataStyle.setBorderLeft(BorderStyle.THIN);
		dataStyle.setBorderRight(BorderStyle.THIN);
		dataStyle.setAlignment(HorizontalAlignment.CENTER);
		dataStyle.setVerticalAlignment(VerticalAlignment.CENTER);

		// 헤더 추가
		Row headerRow = sheet.createRow(1);
		String[] headers = {"Name", "Hits", "Year", "Month"};
		for (int i = 0; i < headers.length; i++) {
			Cell cell = headerRow.createCell(i);
			cell.setCellValue(headers[i]);
			cell.setCellStyle(headerStyle);
			sheet.setColumnWidth(i, 4000); // 컬럼 너비 설정
		}

		// ExcelData 엔티티에서 Name으로 검색한 데이터 가져오기
		String xpathQuery = "//MyFirstModule.ExcelData[Name='" + searchName + "']";
		List<IMendixObject> dataList = Core.retrieveXPathQuery(getContext(), xpathQuery);

		int rowNum = 2;
		for (IMendixObject obj : dataList) {
			Row row = sheet.createRow(rowNum++);
			Cell cell0 = row.createCell(0);
			cell0.setCellValue(obj.getValue(getContext(), "Name").toString());
			cell0.setCellStyle(dataStyle);

			Cell cell1 = row.createCell(1);
			cell1.setCellValue(Integer.parseInt(obj.getValue(getContext(), "Hits").toString()));
			cell1.setCellStyle(dataStyle);

			Cell cell2 = row.createCell(2);
			cell2.setCellValue(obj.getValue(getContext(), "Year").toString());
			cell2.setCellStyle(dataStyle);

			Cell cell3 = row.createCell(3);
			cell3.setCellValue(obj.getValue(getContext(), "Month").toString());
			cell3.setCellStyle(dataStyle);
		}

		ByteArrayOutputStream byteArrayStream = new ByteArrayOutputStream();
		workbook.write(byteArrayStream);
		byte[] byteArray = byteArrayStream.toByteArray();

		ByteArrayInputStream inputStream = new ByteArrayInputStream(byteArray);
		Core.storeFileDocumentContent(getContext(), __ExcelFileDoc, "GeneratedExcel.xlsx", inputStream);
		inputStream.close();
		byteArrayStream.close();

		return __ExcelFileDoc;

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExcelDownload";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
