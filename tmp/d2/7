7 Module의 개념 (일반버전)

Module의 주요 개념과 역할
기능 단위 분리
애플리케이션의 특정 기능(예: 사용자 관리, 주문 처리, 보고서 등)을 하나의 모듈로 구성합니다.
이렇게 나누면 각 모듈별로 책임이 명확해지고, 유지보수나 확장성이 좋아집니다.
독립적인 개발 및 배포
모듈 단위로 개발할 수 있어 팀 작업 시 역할 분담이 쉽습니다.
재사용 가능한 모듈을 만들어 다른 프로젝트에서 재활용할 수도 있습니다.
모듈 내부 구성
엔티티(Entity), 페이지(Page), 마이크로플로우(Microflow), 나노플로우(Nanoflow), 보안 설정 등이 포함됩니다.
모듈 내에 포함된 요소들은 기본적으로 모듈 경계 내에서 관리되고, 필요한 경우 다른 모듈에 노출할 수도 있습니다.
모듈 간 의존성
한 모듈에서 다른 모듈의 기능을 참조할 수 있습니다. (예: 주문 모듈이 사용자 모듈의 엔티티 참조)
이때 모듈 간 의존성(dependency)을 설정하여 참조 관계를 명확히 합니다.
개발 효율 및 유지보수
코드와 리소스를 모듈별로 분리하면, 기능 변경 시 해당 모듈만 집중적으로 수정하면 되어 작업 효율이 높아집니다.
대규모 프로젝트에서 모듈화는 필수적인 설계 기법입니다.
간단 요약
항목	설명
모듈 (Module)	Mendix 앱에서 기능 단위로 분리된 개발 단위
포함 요소	엔티티, 페이지, 마이크로플로우 등
역할	기능별 책임 분리, 재사용성, 팀 협업 지원
특징	

