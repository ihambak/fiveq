21 App Security의 이해 및 설정   (일반버전) - 내용보충필요


Mendix에서 **App Security(애플리케이션 보안)**는 애플리케이션 내 사용자 접근 권한과 데이터 보안을 관리하는 매우 중요한 기능입니다. 사용자별로 어떤 기능에 접근할 수 있는지, 어떤 데이터에 접근할 수 있는지를 제한하는 역할을 합니다.
1. Mendix App Security란?
Mendix 앱 내에서 누가 어떤 리소스(페이지, 마이크로플로우, 데이터 등)에 접근할 수 있는지를 제어하는 기능입니다.
앱이 배포될 때, 사용자 인증과 권한 부여를 관리하여 보안을 강화합니다.
App Security 설정은 크게 두 가지로 나뉩니다:
사용자 인증(Authentication): 사용자가 누구인지 확인하는 과정 (예: Mendix 인증, LDAP, SSO 등)
사용자 권한(Authorization): 인증된 사용자가 앱 내에서 무엇을 할 수 있는지 제한
2. Mendix App Security 주요 구성 요소
2-1. User Roles (사용자 역할)
앱 사용자를 그룹화해서 역할별로 권한을 다르게 설정하는 방법입니다.
역할별로 앱 내 페이지, 마이크로플로우, 데이터 액세스 권한을 지정할 수 있습니다.
예를 들어, Admin, Manager, User, Guest 같은 역할을 정의할 수 있습니다.
Mendix에서는 기본적으로 몇 가지 역할을 제공하며, 필요에 따라 커스텀 역할을 만들 수 있습니다.
2-2. Module Roles (모듈 역할)
Mendix 프로젝트 내 각 모듈별로 역할을 정의할 수 있습니다.
모듈 역할은 보통 ‘일반 역할’에 속하며, 앱 내 다양한 기능(페이지, 마이크로플로우, 데이터 엔티티)에 대한 권한을 설정할 때 사용됩니다.
3. Role에 대한 이해와 설정법
3-1. Role 개념
User Role(사용자 역할): 실제 사용자에게 할당하는 역할
Module Role(모듈 역할): 앱 모듈 내에서 권한 설정에 활용되는 역할
각 사용자는 하나 이상의 User Role을 가질 수 있습니다.
User Role은 모듈 역할을 포함하며, 모듈별로 세분화된 권한 설정이 가능합니다.
3-2. Mendix에서 Role 설정하기 (App Security 설정)
Project → Security... 메뉴로 이동
Mendix Studio Pro 상단 메뉴에서 Project → Security... 선택
Security Level 설정
No Security (보안 비활성화)
User Role (역할 기반 보안 활성화)
보통은 User Role 보안 모드를 사용합니다.
User Roles 생성 및 관리
‘User Roles’ 탭에서 새로운 역할 추가 가능 (예: Admin, Employee, Guest)
각 역할에 대해 로그인 가능 여부, 비밀번호 정책 등을 설정할 수 있음
Module Roles 설정
각 모듈별로 역할을 정의
User Role에 모듈 역할 연결 (User Role이 어떤 모듈 역할을 포함하는지 지정)
권한 부여
페이지 권한: 각 페이지에 대해 어떤 모듈 역할(역할)에 접근 허용할지 설정
마이크로플로우 권한: 마이크로플로우 실행 권한 설정
엔티티 권한: 데이터 읽기, 쓰기, 삭제 권한 설정 (도메인 모델에서 엔티티 권한 설정 가능)
사용자 관리
사용자 계정을 생성하고, 특정 User Role을 할당
사용자는 할당된 역할에 따라 앱 내 권한을 가짐
4. 권한 설정 예시
Role	페이지 접근권한	마이크로플로우 실행권한	데이터 엔티티 권한
Admin	모든 페이지 접근 가능	모든 마이크로플로우 실행 가능	모든 데이터 읽기/쓰기/삭제 가능
Manager	관리 관련 페이지 접근 가능	일부 마이크로플로우 실행 가능	제한된 데이터 읽기/쓰기 가능
Employee	기본 사용자 페이지 접근 가능	제한된 마이크로플로우 실행 가능	일부 데이터 읽기만 가능
Guest	제한된 공개 페이지만 접근 가능	실행 권한 없음	읽기 권한 없음


5. 추가 팁
Anonymous Role: 로그인하지 않은 사용자를 위한 역할도 설정할 수 있습니다.
SSO 연동: 외부 인증 시스템(LDAP, SAML 등)과 연동 가능.
Runtime Security: App Security 설정은 앱 실행 중에도 엄격하게 적용됨.
테스트 시 유저 역할에 따라 접속해서 권한이 잘 작동하는지 반드시 확인 필요




==========-------------

Mendix에서 App Security는 애플리케이션의 접근 권한과 데이터 보안을 제어하는 핵심 기능입니다. 앱의 사용자들이 어떤 데이터에 접근할 수 있고, 어떤 기능을 수행할 수 있는지를 설정하는 중요한 부분입니다.


---

1. Mendix의 App Security란?

App Security는 아래 네 가지 핵심 요소로 구성됩니다.

구성 요소	설명

Security Level	보안 수준을 설정합니다. (예: Prototype / Production)
User Roles	애플리케이션 사용자 그룹을 정의합니다. (예: 관리자, 일반 사용자 등)
Module Roles	모듈 내부에서 사용자 역할을 제한하는 기능입니다.
Access Rules	Entity, Page, Microflow 등에 대한 접근 권한을 설정합니다.



---

2. Security Level 종류

Off: 개발 초기. 보안 기능이 꺼져 있습니다.

Prototype / Demo: 빠른 테스트용. 보안이 느슨합니다.

Production: 실제 서비스 배포용. 강력한 보안이 필요합니다.


Tip: 앱을 배포할 땐 반드시 Production으로 설정하세요.


---

3. User Role (사용자 역할)

User Role은 앱 사용자들의 역할(권한)을 정의합니다.

예:

Admin: 모든 기능 접근 가능

Manager: 일부 관리 기능 가능

User: 기본 기능만 사용 가능


생성 방법:

1. Project Explorer > Security > User roles로 이동


2. "New" 버튼을 눌러 역할 생성


3. 필요한 이름 설정 (예: Admin)


4. 관련 Module Role 연결 (다음에 설명)




---

4. Module Role (모듈 역할)

각 모듈(Module)별로 정의되는 역할입니다. User Role이 어떤 모듈에서 어떤 기능을 할 수 있는지를 결정합니다.

예:

MyModule에는 Manager, Viewer, Editor라는 Module Role이 있음

Admin User Role은 Manager + Editor 역할을 가질 수 있음


설정 방법:

1. Project Explorer > MyModule > Security


2. "Module Roles" 탭에서 역할 추가


3. 해당 역할이 접근할 수 있는 페이지, 마이크로플로우, 엔티티 권한 등을 설정




---

5. Access Rules (접근 규칙)

Entity, Page, Microflow 등에서 권한을 세부적으로 설정할 수 있습니다.

Entity Access Rules:

각 Entity에 대해 누가 Read, Write, Delete 가능한지 설정

조건부 필터([%CurrentUser%] = CreatedBy) 설정 가능


Page Access:

페이지에서 접근 가능한 User Role을 지정


Microflow Access:

마이크로플로우에서 호출 가능한 User Role을 지정



---

6. 실습 예시

예: “Employee”라는 엔티티가 있고, 일반 사용자는 자기 정보만 수정할 수 있어야 한다면:

1. Entity: Employee


2. Access rule:

Allow Read/Write

XPath constraint: [id = '[%CurrentUser%]']





---

7. 요약

구성 요소	설명

Security Level	앱 전체의 보안 레벨을 설정
User Role	사용자 그룹 정의
Module Role	각 모듈에서 수행 가능한 역할 정의
Access Rule	데이터 및 기능 접근 권한 제어



---

필요하시면 실제 설정 예제 (스크린샷 기반 튜토리얼)도 제공해드릴 수 있어요. 더 깊이 있는 주제가 궁금하신가요?

